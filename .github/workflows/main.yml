name: PolyPrep Security Scan

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      go-dir: ${{ steps.find-dirs.outputs.go-dir }}
      python-dir: ${{ steps.find-dirs.outputs.python-dir }}
      js-dir: ${{ steps.find-dirs.outputs.js-dir }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Find project directories
        id: find-dirs
        run: |
          if [ -d "./devsectest" ]; then
            echo "go-dir=./devsectest" >> $GITHUB_OUTPUT
            echo "python-dir=./devsectest" >> $GITHUB_OUTPUT
            echo "js-dir=./devsectest/static/js" >> $GITHUB_OUTPUT
          else
            echo "go-dir=." >> $GITHUB_OUTPUT
            echo "python-dir=." >> $GITHUB_OUTPUT
            echo "js-dir=." >> $GITHUB_OUTPUT
          fi

  go-scan:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Initialize Go module if needed
        run: |
          if [ ! -f "go.mod" ]; then
            go mod init github.com/mamoedus/devsectest || true
            go mod tidy
          fi
      
      - name: Install Go tools
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
      
      - name: Run golangci-lint
        run: |
          cd ${{ needs.setup.outputs.go-dir }}
          golangci-lint run --out-format=colored-line-number ./...
      
      - name: Run gosec
        run: |
          cd ${{ needs.setup.outputs.go-dir }}
          gosec -fmt=json -output=gosec-report.json ./... || true
        continue-on-error: true
      
      - name: Upload Go report
        uses: actions/upload-artifact@v4
        with:
          name: go-security-report
          path: ${{ needs.setup.outputs.go-dir }}/gosec-report.json

  python-scan:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Python tools
        run: |
          pip install bandit safety
      
      - name: Run Bandit
        run: |
          cd ${{ needs.setup.outputs.python-dir }}
          bandit -r . -f json -o bandit-report.json || true
        continue-on-error: true
      
      - name: Run Safety
        run: |
          cd ${{ needs.setup.outputs.python-dir }}
          safety check --json --output safety-report.json || true
        continue-on-error: true
      
      - name: Upload Python reports
        uses: actions/upload-artifact@v4
        with:
          name: python-security-reports
          path: |
            ${{ needs.setup.outputs.python-dir }}/bandit-report.json
            ${{ needs.setup.outputs.python-dir }}/safety-report.json

  js-scan:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install JS dependencies
        run: |
          cd ${{ needs.setup.outputs.js-dir }}
          npm install
      
      - name: Run npm audit
        run: |
          cd ${{ needs.setup.outputs.js-dir }}
          npm audit --json > npm-audit.json || true
        continue-on-error: true
      
      - name: Run Snyk (if SNYK_TOKEN provided)
        if: env.SNYK_TOKEN
        run: |
          cd ${{ needs.setup.outputs.js-dir }}
          npm install -g snyk
          snyk test --json > snyk-report.json || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      
      - name: Upload JS reports
        uses: actions/upload-artifact@v4
        with:
          name: js-security-reports
          path: |
            ${{ needs.setup.outputs.js-dir }}/npm-audit.json
            ${{ needs.setup.outputs.js-dir }}/snyk-report.json
