name: Go Security Scan

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  go-security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/core

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Check and update Go module
      run: |
        # Проверяем существование go.mod
        if [ -f "go.mod" ]; then
          echo "go.mod exists, updating dependencies..."
          go mod tidy
        else
          echo "Initializing new Go module..."
          go mod init github.com/mamoedus/devsectest
          go mod tidy
        fi
        
        # Явно устанавливаем проблемные зависимости
        go get github.com/Nerzal/gocloak/v13@latest
        go get gorm.io/gorm@latest
        go get github.com/gin-gonic/gin@latest
        go get github.com/aws/aws-sdk-go@latest
        go mod download
    
    - name: Install security tools
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    
    - name: Run gosec (security audit)
      run: |
        gosec -exclude=G104,G107 -fmt=json -out=../gosec-report.json ./... || true
        mv ../gosec-report.json .
    
    - name: Run golangci-lint (code quality)
      run: |
        golangci-lint run --out-format=colored-line-number --timeout=5m --skip-dirs="migrations" ./...
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: go-security-reports
        path: |
          backend/core/gosec-report.json
